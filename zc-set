#!/usr/bin/env python

import sys
import argparse
import zero_cache

WRITE_FUNCTIONS = {
    'double' : zero_cache.TypedClient.WriteDouble,
    'long' : zero_cache.TypedClient.WriteLong
}

CONVERSION_FUNCTIONS = {
    'double' : float,
    'long' : int
}

def parse_args():
    parser = argparse.ArgumentParser(description="This is utility to set new value for the specified index in the cache")
    parser.add_argument("-t", "--type", help="type of the cached data", default="double", choices=('double', 'long'))
    parser.add_argument("-i", "--index", help="index number", type=int, required=True)
    parser.add_argument("-v", "--value", help="cached value", required=True)
    parser.add_argument("-l", "--log", help="log file name", default="")

    global ARGS
    ARGS = parser.parse_args()

def write_value(client, index, value):
    return WRITE_FUNCTIONS[ARGS.type](client, index, value)

def main():
    parse_args()
    client = zero_cache.TypedClient(ARGS.log)
    value = CONVERSION_FUNCTIONS[ARGS.type](ARGS.value)
    write_value(client, ARGS.index, value)

if __name__ == "__main__":
    main()
